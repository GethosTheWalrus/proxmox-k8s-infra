stages:
  - deploy
  - init-master
  - init-workers
  - destroy

deploy:
  stage: deploy
  image: 
    name: hashicorp/terraform:latest
    entrypoint: [""]
  before_script:
    - export TF_VAR_username=$(echo "$PVEUSER" | base64 -d)
    - export TF_VAR_password=$(echo "$PVEPASSWORD" | base64 -d)
    - export PROJECT_ID=5
    - export TF_USERNAME=$(echo "$GITLABUSERNAME" | base64 -d)
    - export TF_PASSWORD=$(echo "$GITLABACCESSTOKEN" | base64 -d)
    - export TF_ADDRESS="http://git.home/api/v4/projects/5/terraform/state/proxmox-k8s-infra"
    - terraform init -backend-config=address=${TF_ADDRESS} -backend-config=lock_address=${TF_ADDRESS}/lock -backend-config=unlock_address=${TF_ADDRESS}/lock -backend-config=username=${TF_USERNAME} -backend-config=password=${TF_PASSWORD} -backend-config=lock_method=POST -backend-config=unlock_method=DELETE -backend-config=retry_wait_min=5
  script:
    - terraform apply --auto-approve=true
    - terraform output vm_private_key > key
    - terraform output vm_public_key > key.pub
    - sed -i '1d;$d' key
    - chmod 600 key
    - cat key
  only:
    - main
  artifacts:
    paths:
      - scripts
      - key
      - key.pub


init-master:
  stage: init-master
  image:
    name: ubuntu:latest
  variables:
    K8S1: 192.168.69.80
    ROLE: master
  before_script:
    - apt update && apt install -y openssh-client
  script:
    # Install k8s on the master node
    - ssh -i key -o StrictHostKeyChecking=no k8s@"$K8S1" 'export ROLE=$ROLE && sudo bash -s' < scripts/install.sh
    # Setup master node
    - ssh -i key -o StrictHostKeyChecking=no k8s@"$K8S1" 'export ROLE=$ROLE && sudo bash -s' < scripts/master.sh
    - scp -i key -o StrictHostKeyChecking=no k8s@"$K8S1":~/hash $CI_PROJECT_DIR/hash
  when: manual
  artifacts:
    paths:
      - hash
      - key

init-workers:
  stage: init-workers
  image:
    name: ubuntu:latest
  variables:
    K8S1: 192.168.69.80
    K8S2: 192.168.69.81
    K8S3: 192.168.69.82
    JOINTOKEN: k8s-join-token.abcdef1234567890
    ROLE: worker
  before_script:
    - apt update && apt install -y openssh-client
  script:
    # Install k8s on workers
    - ssh -i key -o StrictHostKeyChecking=no k8s@"$K8S2" 'export ROLE=$ROLE && sudo bash -s' < scripts/install.sh
    - ssh -i key -o StrictHostKeyChecking=no k8s@"$K8S3" 'export ROLE=$ROLE && sudo bash -s' < scripts/install.sh
    # Download hash artifact from init-master stage
    - mkdir -p /tmp/artifacts
    - cp $CI_PROJECT_DIR/hash /tmp/artifacts/hash
    # Join master node using the token and hash
    - ssh -i key -o StrictHostKeyChecking=no k8s@"$K8S2" 'export ROLE=$ROLE && sudo bash -s' < scripts/worker.sh $K8S1 $JOINTOKEN $(cat /tmp/artifacts/hash)
    - ssh -i key -o StrictHostKeyChecking=no k8s@"$K8S3" 'export ROLE=$ROLE && sudo bash -s' < scripts/worker.sh $K8S1 $JOINTOKEN $(cat /tmp/artifacts/hash)
  when: manual
  dependencies:
    - init-master
  artifacts:
    paths:
      - /tmp/artifacts/hash
      - /tmp/artifacts/key


destroy:
  stage: destroy
  image: 
    name: hashicorp/terraform:latest
    entrypoint: [""]
  before_script:
    - export TF_VAR_username=$(echo "$PVEUSER" | base64 -d)
    - export TF_VAR_password=$(echo "$PVEPASSWORD" | base64 -d)
    - export PROJECT_ID=5
    - export TF_USERNAME=$(echo "$GITLABUSERNAME" | base64 -d)
    - export TF_PASSWORD=$(echo "$GITLABACCESSTOKEN" | base64 -d)
    - export TF_ADDRESS="http://git.home/api/v4/projects/5/terraform/state/proxmox-k8s-infra"
    - terraform init -backend-config=address=${TF_ADDRESS} -backend-config=lock_address=${TF_ADDRESS}/lock -backend-config=unlock_address=${TF_ADDRESS}/lock -backend-config=username=${TF_USERNAME} -backend-config=password=${TF_PASSWORD} -backend-config=lock_method=POST -backend-config=unlock_method=DELETE -backend-config=retry_wait_min=5
  script:
    - terraform destroy --auto-approve=true
  when: manual
